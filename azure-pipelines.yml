# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python39:
      python.version: '3.9'

variables:
  mySecureFile: ""

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    # python3 -m pip install --upgrade pip
    # pip3 install -r requirements.txt
    echo "Worked"
    echo $(Pipeline.Workspace)
  displayName: 'Install dependencies'

- task: DownloadSecureFile@1
  name: mySecureFile
  displayName: 'Download secure file'
  inputs:
    secureFile: 'txt.txt'

- script: |
    echo Installing $(mySecureFile.secureFilePath) to the trusted CA directory...
    echo "$(mySecureFile.secureFilePath)"
    sudo chown root:root $(mySecureFile.secureFilePath)
    sudo chmod a+r $(mySecureFile.secureFilePath)
    sudo ln -s -t /etc/ssl/certs/ $(mySecureFile.secureFilePath)
    cat $(mySecureFile.secureFilePath)
    echo "blah"


- task: buildandreleasetask@0
  displayName: 'Run my custom task'
  inputs:
    samplestring: 'just some input'
    fileInput: '$(mySecureFile.secureFilePath)'
